name: Konverter Tests
on: [push, pull_request]

jobs:
  Tests:
    name: Ubuntu / ${{ matrix.python-version }} / TF ${{ matrix.tf-version }}
    runs-on: Ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7]
        tf-version: [1.14]
        include:
          - python-version: 3.6  # add custom tf-versions per python-version
            tf-version: 2.0.0b1
          - python-version: 3.7
            tf-version: 2.2
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.0

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

      - name: Install dependencies (using TensorFlow ${{ matrix.tf-version }})
        shell: bash
        run: |
          poetry install --no-dev
          poetry run pip install pytest
          poetry run pip install tensorflow==${{ matrix.tf-version }}

      - name: Konvert model and compare with Keras
        run: poetry run pytest -s tests
